#!/usr/bin/env ruby
#
# frozen_string_literal: true

require_relative '../lib/kdk'

def postgresql
  @postgresql ||= KDK.config.geo.secondary? ? KDK::PostgresqlGeo.new : KDK::Postgresql.new
end

def db_name
  @db_name ||= KDK.config.registry.database.dbname
end

def main
  try_times = ENV['CI'] ? 600 : 10 # 10 mins on CI, 10 seconds otherwise.

  abort 'postgres not ready' unless postgresql.ready?(try_times: try_times)

  if postgresql.db_exists?(db_name)
    KDK::Output.info("#{db_name} exists, nothing to do here.")
    exit
  else
    abort 'createdb failed' unless postgresql.createdb(%W[--encoding=UTF8 --locale=C --echo #{db_name}])
    abort 'migrate failed' unless system('support/migrate-registry')
  end
end

main
